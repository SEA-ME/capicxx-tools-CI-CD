name: CI

# Trigger that will run the workflow. 
# The workflow will start on push events to the "main" branch.
# (Run this workflow manually or from the Actions tab)
on:
  push:
    branches: [ "main" ]
    paths:
      - 'fidl/**.fidl'
      - 'fidl/**.fdepl'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "main" ]
    paths:
      - 'fidl/**.fidl'
      - 'fidl/**.fdepl'
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
# This workflow contains a single job called "commonapi-code-generator".
# Steps represents a sequence of tasks that will be executed as part of the job.
jobs:
  commonapi-code-generator:
    # Define runner type.
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: 1) Download CommonAPI Core Generator.
        run: |
          wget https://github.com/COVESA/capicxx-core-tools/releases/download/3.2.0.1/commonapi_core_generator.zip
          unzip commonapi_core_generator.zip -d ${{ github.workspace }}/core-generator

      - name: 2) Download CommonAPI vSOME/IP Generator.
        run: |
          wget https://github.com/COVESA/capicxx-someip-tools/releases/download/3.2.0.1/commonapi_someip_generator.zip
          unzip commonapi_someip_generator.zip -d ${{ github.workspace }}/someip-generator

      - name: 3) Generate CommonAPI Code from Core Generator.
        run: |
          echo $(find ${{ github.workspace }} -type f -name '*.fidl')
          core-generator/commonapi-core-generator-linux-x86_64 -sk $(find ${{ github.workspace }} -type f -name '*.fidl') -d ${{ github.workspace }}/src-gen/core

      - name: 4) Generate CommonAPI Code with the vSOME/IP Generator.
        run: |
          echo $(find ${{ github.workspace }} -type f -name '*.fdepl')
          someip-generator/commonapi-someip-generator-linux-x86_64 $(find ${{ github.workspace }} -type f -name '*.fdepl') -d ${{ github.workspace }}/src-gen/someip

      - name: 5) Save generated code in src-gen
        if: github.event_name == 'push'
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git add src-gen
          git commit -m "Auto Generated fidl" || true 
          git push
      
      -  name: 6) Pull src-gen to local repository
          if: github.event_name == 'pull_request'
          run: |
            git config user.name "$(git log -n 1 --pretty=format:%an)"
            git config user.email "$(git log -n 1 --pretty=format:%ae)"
            git pull origin main